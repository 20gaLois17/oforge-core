<div class="form content-type-edit-form-video">
    {% if data.data.path %}
        <input type="hidden" name="data[mediaID]" value="{{ data.data.mediaID }}" />
        <input type="hidden" name="data[path]" value="{{ data.data.path }}" />
    {% endif %}
    <div class="form-group">
        <label for="current--{{ data.id }}">{{ i18n('cms_contentype_video_label_current', {
                en: 'Current video',
                de: 'Aktuelles Video',
            }) }}</label>
        <div>
            {% if data.data.path %}
                <a href="{{ data.data.path }}" target="_blank">{{ data.data.path }}</a>
            {% else %}
                {{ i18n('cms_contentype_video_no_video_uploaded', {
                    en: 'No video uploaded yet',
                    de: 'Noch kein Video hochgeladen',
                }) }}
            {% endif %}
        </div>
    </div>
    <div class="form-group">
        <label for="current--{{ data.id }}">{{ i18n('cms_contentype_video_label_autoplay', {
                en: 'Autoplay',
                de: 'Automatisch abspielen',
            }) }}</label>
        <div>
            {% include 'Backend/Components/Form/Switch.twig' with {
                id: 'video-autoplay',
                name: 'data[autoplay]',
                checked:  data.data.autoplay|default(false),
            } only %}
        </div>
    </div>
    <div class="form-group">
        <label for="current--{{ data.id }}">{{ i18n('cms_contentype_video_label_mute', {
                en: 'Mute',
                de: 'Stumm schalten',
            }) }}</label>
        <div>
            {% include 'Backend/Components/Form/Switch.twig' with {
                id: 'video-mute',
                name: 'data[mute]',
                checked:  data.data.mute|default(false),
            } only %}
        </div>
    </div>
    <div class="form-group">
        <label for="current--{{ data.id }}">{{ i18n('cms_contentype_video_label_loop', {
                en: 'Play endlessly',
                de: 'Endlos abspielen',
            }) }}</label>
        <div>
            {% include 'Backend/Components/Form/Switch.twig' with {
                id: 'video-loop',
                name: 'data[loop]',
                checked:  data.data.loop|default(false),
            } only %}
        </div>
    </div>
    <div class="form-group">
        <label for="current--{{ data.id }}">{{ i18n('cms_contentype_video_label_controls', {
                en: 'Show controls',
                de: 'Steuerelemente anzeigen',
            }) }}</label>
        <div>
            {% include 'Backend/Components/Form/Switch.twig' with {
                id: 'video-controls',
                name: 'data[controls]',
                checked:  data.data.controls|default(false),
            } only %}
        </div>
    </div>
    <div class="form-group">
        <label for="video-upload--{{ data.id }}">{{ i18n('cms_contentype_video_label_upload', {
                en: 'Video (MP4 only)',
                de: 'Video (nur MP4)',
            }) }}</label>
        <input type="hidden" id="video-upload--{{ data.id }}-maxsize" name="MAX_FILE_SIZE" value="5000000" />
        <input class="form-control" onchange="cms_video_filesize_check(event)" name="upload" type="file"
               accept="video/mp4"
               id="video-upload--{{ data.id }}" />
        <span class="help-block">
            {{ i18n('cms_contentype_video_label_upload_limit_exceeded', {
                en: 'The selected file exceeds the allowed file size of %s.',
                de: 'Die ausgewählte Datei überschreitet die erlaubte Dateigröße von %s.'
            })|format('5MB') }}
        </span>
        <div>
            <small>{{ i18n('cms_contentype_video_label_upload_subtext', {
                    en: 'Upload file to replace existing one',
                    de: 'Laden Sie die Datei hoch, um die vorhandene zu ersetzen',
                }) }}</small>
        </div>
    </div>
    <script>
        function cms_video_filesize_check() {
            event.target.parentNode.classList.remove('has-error');
            if (event.target.files.length === 0) {
                return;
            }
            var maxSize = document.getElementById(event.target.id + '-maxsize').value;
            if (event.target.files[0].size > maxSize) {
                event.target.parentNode.classList.add('has-error');
            }
        }
    </script>
    <style>
        .content-type-edit-form-video .help-block {
            display: none;
        }

        .content-type-edit-form-video .has-error .help-block {
            display: block;
        }
    </style>
</div>
